# ICRAR - International Centre for Radio Astronomy Research
# (c) UWA - The University of Western Australia, 2019
# Copyright by UWA (in the framework of the ICRAR)
# All rights reserved
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307  USA

image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
- lint
- build
- test
- publish

# Include CI templates
include:
# OCI Images
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'

# container scanning for main branch:
#   variables:
#     TRIVY_OCI_REGISTRY_HOST: "registry.gitlab.com/ska-telescope/ska-cicd-cpp-build-base"


.xcontainer-scanning: # Executed on the image from the CAR
  stage: test # The stage has to be test, otherwise it won't work
  tags:
    - k8srunner
  image:
    name: docker.io/aquasec/trivy:latest
    entrypoint: [""]
  variables:
    TRIVY_OCI_REGISTRY_HOST: "registry.gitlab.com/ska-telescope/ska-cicd-cpp-build-base"
  allow_failure: true
  before_script:
  - |
    # Check if override is enabled
    echo "OVERRIDE_FULL_IMAGE_NAME=$OVERRIDE_FULL_IMAGE_NAME";
    echo "TRIVY_OCI_REGISTRY_HOST=$TRIVY_OCI_REGISTRY_HOST";
    # Check if override is enabled
    if [ -z "$OVERRIDE_FULL_IMAGE_NAME" ]
    then
      # Check PROJECT Variable for image name
      if [ -z "$PROJECT" ]
      then
        IMAGE_NAME=$(basename $(pwd))
      else
        IMAGE_NAME=$PROJECT
      fi
      # Check TRIVY_OCI_REGISTRY_HOST variable
      if [ -z "$TRIVY_OCI_REGISTRY_HOST" ]
      then
        if [ -z "$CAR_OCI_REGISTRY_HOST" ]
        then
          TRIVY_OCI_REGISTRY_HOST=artefact.skao.int
        else
          TRIVY_OCI_REGISTRY_HOST=$CAR_OCI_REGISTRY_HOST
        fi
      fi
      # Set Full Image name
      IMAGE_NAME=$TRIVY_OCI_REGISTRY_HOST/$IMAGE_NAME
      echo "Image Name is $IMAGE_NAME"
      # Get version from the repository
      if [ -z "$VERSION" ]
      then
        VERSION=$(awk -F= '/^release=/{print $2}' .release)
      fi
      # Change version to dev version if GitLab Registry
      if [[ "${TRIVY_OCI_REGISTRY_HOST}" == $CI_REGISTRY* ]]; then
        VERSION=$VERSION-dev.$CI_COMMIT_SHORT_SHA  #"-" is used as "+" causes the docker building process to fail
      fi
      echo "Image version is $VERSION"
      # Set the FULL_IMAGE_NAME variable for container scanning job
      FULL_IMAGE_NAME=$IMAGE_NAME:$VERSION
      echo "Full image name is extracted as $FULL_IMAGE_NAME"
    else
      echo "Scanning $FULL_IMAGE_NAME"
    fi
  script:
    - trivy --version
    # Check $FULL_IMAGE_NAME, if empty then fail
    - test $FULL_IMAGE_NAME && echo "Scanning $FULL_IMAGE_NAME" || (echo "Image name missing; exit 1")
    # cache cleanup is needed when scanning images with the same tags, it does not remove the database
    - echo time trivy image --clear-cache
    # update vulnerabilities db
    - echo time trivy --download-db-only --no-progress --cache-dir .trivycache/
    # Builds report and puts it in the default workdir $CI_PROJECT_DIR, so `artifacts:` can take it from there
    - echo time trivy --exit-code 0 --cache-dir .trivycache/ --no-progress --format template --template "@/contrib/gitlab.tpl"
        --output "$CI_PROJECT_DIR/gl-container-scanning-report.json" "$FULL_IMAGE_NAME"
    # Prints full report
    - echo time trivy --exit-code 0 --cache-dir .trivycache/ --no-progress "$FULL_IMAGE_NAME"
    # Fail on critical vulnerabilities
    - echo time trivy --exit-code 0 --cache-dir .trivycache/ --severity CRITICAL --no-progress "$FULL_IMAGE_NAME"
  cache:
    paths:
      - .trivycache/
  artifacts:
    when: always
    reports:
      container_scanning: gl-container-scanning-report.json


xcontainer scanning for main branch:
  extends: .xcontainer-scanning
  rules:
  - if: $FULL_IMAGE_NAME # Run if triggered externally
    variables:
      OVERRIDE_FULL_IMAGE_NAME: "true"
  - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH # Run on main branch
    exists:
      - Dockerfile
      - images/**/*
  - if: $CI_COMMIT_TAG # Run on tags
    exists:
      - Dockerfile
      - images/**/*

xcontainer scanning for MRs:
  extends: .xcontainer-scanning
  rules:
  - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH' # Run on push, not default branch - avoid detached
    exists:
      - Dockerfile
      - images/**/*
